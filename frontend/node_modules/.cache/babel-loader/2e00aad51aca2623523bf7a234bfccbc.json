{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\dev\\\\react-mesto-api-full\\\\frontend\\\\src\\\\components\\\\EditAvatarPopup.js\",\n    _s = $RefreshSig$();\n\nimport PopupWithForm from \"./PopupWithForm\";\nimport React from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditAvatarPopup(props) {\n  _s();\n\n  const avatarLinkRef = React.useRef();\n  const currentUser = React.useContext(CurrentUserContext);\n  React.useEffect(() => {\n    avatarLinkRef.current.value = \"\";\n  }, [currentUser, props.isOpen]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onUpdateAvatar({\n      avatar: avatarLinkRef.current.value\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    onClose: props.onClose,\n    isOpen: props.isOpen,\n    name: \"avatar\",\n    title: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n    buttonText: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"url\",\n      name: \"link\",\n      className: \"popup__form-input popup__form-input_avatar_link\",\n      ref: avatarLinkRef,\n      placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n      id: \"avatar-link\",\n      required: true,\n      autoComplete: \"off\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__error avatar-link-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditAvatarPopup, \"AjpT4UL9DxoMUyj7foXLanbRx/o=\");\n\n_c = EditAvatarPopup;\nexport default EditAvatarPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAvatarPopup\");","map":{"version":3,"sources":["C:/Users/User/dev/react-mesto-api-full/frontend/src/components/EditAvatarPopup.js"],"names":["PopupWithForm","React","CurrentUserContext","EditAvatarPopup","props","avatarLinkRef","useRef","currentUser","useContext","useEffect","current","value","isOpen","handleSubmit","e","preventDefault","onUpdateAvatar","avatar","onClose"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,gCAAnC;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC9B,QAAMC,aAAa,GAAGJ,KAAK,CAACK,MAAN,EAAtB;AACA,QAAMC,WAAW,GAAGN,KAAK,CAACO,UAAN,CAAiBN,kBAAjB,CAApB;AAEAD,EAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AACpBJ,IAAAA,aAAa,CAACK,OAAd,CAAsBC,KAAtB,GAA8B,EAA9B;AACD,GAFD,EAEG,CAACJ,WAAD,EAAcH,KAAK,CAACQ,MAApB,CAFH;;AAIA,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAX,IAAAA,KAAK,CAACY,cAAN,CAAqB;AACnBC,MAAAA,MAAM,EAAEZ,aAAa,CAACK,OAAd,CAAsBC;AADX,KAArB;AAGD;;AAED,sBACE,QAAC,aAAD;AACE,IAAA,OAAO,EAAEP,KAAK,CAACc,OADjB;AAEE,IAAA,MAAM,EAAEd,KAAK,CAACQ,MAFhB;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,KAAK,EAAC,uFAJR;AAKE,IAAA,UAAU,EAAC,wDALb;AAME,IAAA,QAAQ,EAAEC,YANZ;AAAA,4BAQE;AACE,MAAA,IAAI,EAAC,KADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,SAAS,EAAC,iDAHZ;AAIE,MAAA,GAAG,EAAER,aAJP;AAKE,MAAA,WAAW,EAAC,wFALd;AAME,MAAA,EAAE,EAAC,aANL;AAOE,MAAA,QAAQ,MAPV;AAQE,MAAA,YAAY,EAAC;AARf;AAAA;AAAA;AAAA;AAAA,YARF,eAkBE;AAAM,MAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GArCQF,e;;KAAAA,e;AAuCT,eAAeA,eAAf","sourcesContent":["import PopupWithForm from \"./PopupWithForm\";\nimport React from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction EditAvatarPopup(props) {\n  const avatarLinkRef = React.useRef();\n  const currentUser = React.useContext(CurrentUserContext);\n\n  React.useEffect(() => {\n    avatarLinkRef.current.value = \"\";\n  }, [currentUser, props.isOpen]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onUpdateAvatar({\n      avatar: avatarLinkRef.current.value,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      onClose={props.onClose}\n      isOpen={props.isOpen}\n      name=\"avatar\"\n      title=\"Обновить аватар\"\n      buttonText=\"Сохранить\"\n      onSubmit={handleSubmit}\n    >\n      <input\n        type=\"url\"\n        name=\"link\"\n        className=\"popup__form-input popup__form-input_avatar_link\"\n        ref={avatarLinkRef}\n        placeholder=\"Ссылка на аватар\"\n        id=\"avatar-link\"\n        required\n        autoComplete=\"off\"\n      />\n      <span className=\"popup__error avatar-link-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;\n"]},"metadata":{},"sourceType":"module"}