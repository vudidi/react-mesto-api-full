{"ast":null,"code":"import React from\"react\";export var BASE_URL=\"https://auth.nomoreparties.co\";export function register(email,password){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email:email,password:password})}).then(checkResponse);}export function authorize(email,password){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email:email,password:password})}).then(checkResponse);}export function getContent(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:\"GET\",headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(token)}}).then(checkResponse);}function checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u0427\\u0442\\u043E-\\u0442\\u043E \\u043F\\u043E\\u0448\\u043B\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A: \".concat(res.status));}","map":{"version":3,"sources":["C:/Users/User/OneDrive/Рабочий стол/react-mesto-auth-main/src/utils/Auth.js"],"names":["React","BASE_URL","register","email","password","fetch","method","headers","body","JSON","stringify","then","checkResponse","authorize","getContent","token","Authorization","res","ok","json","Promise","reject","status"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,+BAAjB,CAEP,MAAO,SAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyBC,QAAzB,CAAmC,CACxC,MAAOC,CAAAA,KAAK,WAAIJ,QAAJ,YAAuB,CACjCK,MAAM,CAAE,MADyB,CAEjCC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAFwB,CAGjCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBP,KAAK,CAALA,KADmB,CAEnBC,QAAQ,CAARA,QAFmB,CAAf,CAH2B,CAAvB,CAAL,CAOJO,IAPI,CAOCC,aAPD,CAAP,CAQD,CAED,MAAO,SAASC,CAAAA,SAAT,CAAmBV,KAAnB,CAA0BC,QAA1B,CAAoC,CACzC,MAAOC,CAAAA,KAAK,WAAIJ,QAAJ,YAAuB,CACjCK,MAAM,CAAE,MADyB,CAEjCC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAFwB,CAGjCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBP,KAAK,CAALA,KADmB,CAEnBC,QAAQ,CAARA,QAFmB,CAAf,CAH2B,CAAvB,CAAL,CAOJO,IAPI,CAOCC,aAPD,CAAP,CAQD,CAED,MAAO,SAASE,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,CAChC,MAAOV,CAAAA,KAAK,WAAIJ,QAAJ,cAAyB,CACnCK,MAAM,CAAE,KAD2B,CAEnCC,OAAO,CAAE,CACP,eAAgB,kBADT,CAEPS,aAAa,kBAAYD,KAAZ,CAFN,CAF0B,CAAzB,CAAL,CAMJJ,IANI,CAMCC,aAND,CAAP,CAOD,CAED,QAASA,CAAAA,aAAT,CAAuBK,GAAvB,CAA4B,CAC1B,GAAIA,GAAG,CAACC,EAAR,CAAY,CACV,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACD,CACD,MAAOC,CAAAA,OAAO,CAACC,MAAR,2GAAuCJ,GAAG,CAACK,MAA3C,EAAP,CACD","sourcesContent":["import React from \"react\";\n\nexport const BASE_URL = \"https://auth.nomoreparties.co\";\n\nexport function register(email, password) {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      email,\n      password,\n    }),\n  }).then(checkResponse);\n}\n\nexport function authorize(email, password) {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      email,\n      password,\n    }),\n  }).then(checkResponse);\n}\n\nexport function getContent(token) {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  }).then(checkResponse);\n}\n\nfunction checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Что-то пошло не так: ${res.status}`);\n}\n"]},"metadata":{},"sourceType":"module"}