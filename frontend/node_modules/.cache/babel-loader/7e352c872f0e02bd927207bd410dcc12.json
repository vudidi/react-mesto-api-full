{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl\n    } = _ref;\n    this._baseUrl = baseUrl;\n  }\n\n  getProfile() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  getCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  editProfile(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(this._checkResponse);\n  }\n\n  updateAvatar(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(this._checkResponse);\n  }\n\n  addCard(name, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(this._checkResponse);\n  }\n\n  getLikes() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  likeCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  removeLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  changeLikeCardStatus(id, isLiked) {\n    if (isLiked) {\n      return this.removeLike(id);\n    } else {\n      return this.likeCard(id);\n    }\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Что-то пошло не так: ${res.status}`);\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-37',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"sources":["C:/Users/User/dev/react-mesto-api-full/frontend/src/utils/Api.js"],"names":["Api","constructor","baseUrl","_baseUrl","getProfile","fetch","headers","_headers","then","_checkResponse","getCards","editProfile","name","about","method","body","JSON","stringify","updateAvatar","avatar","addCard","link","getLikes","likeCard","id","removeLike","changeLikeCardStatus","isLiked","deleteCard","res","ok","json","Promise","reject","status","api"],"mappings":"AAAA,MAAMA,GAAN,CAAU;AACRC,EAAAA,WAAW,OAAc;AAAA,QAAb;AAAEC,MAAAA;AAAF,KAAa;AACvB,SAAKC,QAAL,GAAgBD,OAAhB;AACD;;AAEDE,EAAAA,UAAU,GAAG;AACX,WAAOC,KAAK,CAAE,GAAE,KAAKF,QAAS,WAAlB,EAA8B;AACxCG,MAAAA,OAAO,EAAE,KAAKC;AAD0B,KAA9B,CAAL,CAEJC,IAFI,CAEC,KAAKC,cAFN,CAAP;AAGD;;AAEDC,EAAAA,QAAQ,GAAG;AACT,WAAOL,KAAK,CAAE,GAAE,KAAKF,QAAS,QAAlB,EAA2B;AACrCG,MAAAA,OAAO,EAAE,KAAKC;AADuB,KAA3B,CAAL,CAEJC,IAFI,CAEC,KAAKC,cAFN,CAAP;AAGD;;AAEDE,EAAAA,WAAW,CAACC,IAAD,EAAOC,KAAP,EAAc;AACvB,WAAOR,KAAK,CAAE,GAAE,KAAKF,QAAS,WAAlB,EAA8B;AACxCW,MAAAA,MAAM,EAAE,OADgC;AAExCR,MAAAA,OAAO,EAAE,KAAKC,QAF0B;AAGxCQ,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBL,QAAAA,IADmB;AAEnBC,QAAAA;AAFmB,OAAf;AAHkC,KAA9B,CAAL,CAOJL,IAPI,CAOC,KAAKC,cAPN,CAAP;AAQD;;AAEDS,EAAAA,YAAY,CAACC,MAAD,EAAS;AACnB,WAAOd,KAAK,CAAE,GAAE,KAAKF,QAAS,kBAAlB,EAAqC;AAC/CW,MAAAA,MAAM,EAAE,OADuC;AAE/CR,MAAAA,OAAO,EAAE,KAAKC,QAFiC;AAG/CQ,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBE,QAAAA;AADmB,OAAf;AAHyC,KAArC,CAAL,CAMJX,IANI,CAMC,KAAKC,cANN,CAAP;AAOD;;AAEDW,EAAAA,OAAO,CAACR,IAAD,EAAOS,IAAP,EAAa;AAClB,WAAOhB,KAAK,CAAE,GAAE,KAAKF,QAAS,QAAlB,EAA2B;AACrCW,MAAAA,MAAM,EAAE,MAD6B;AAErCR,MAAAA,OAAO,EAAE,KAAKC,QAFuB;AAGrCQ,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBL,QAAAA,IADmB;AAEnBS,QAAAA;AAFmB,OAAf;AAH+B,KAA3B,CAAL,CAOJb,IAPI,CAOC,KAAKC,cAPN,CAAP;AAQD;;AAEDa,EAAAA,QAAQ,GAAG;AACT,WAAOjB,KAAK,CAAE,GAAE,KAAKF,QAAS,QAAlB,EAA2B;AACrCG,MAAAA,OAAO,EAAE,KAAKC;AADuB,KAA3B,CAAL,CAEJC,IAFI,CAEC,KAAKC,cAFN,CAAP;AAGD;;AAEDc,EAAAA,QAAQ,CAACC,EAAD,EAAK;AACX,WAAOnB,KAAK,CAAE,GAAE,KAAKF,QAAS,UAASqB,EAAG,QAA9B,EAAuC;AACjDV,MAAAA,MAAM,EAAE,KADyC;AAEjDR,MAAAA,OAAO,EAAE,KAAKC;AAFmC,KAAvC,CAAL,CAGJC,IAHI,CAGC,KAAKC,cAHN,CAAP;AAID;;AAEDgB,EAAAA,UAAU,CAACD,EAAD,EAAK;AACb,WAAOnB,KAAK,CAAE,GAAE,KAAKF,QAAS,UAASqB,EAAG,QAA9B,EAAuC;AACjDV,MAAAA,MAAM,EAAE,QADyC;AAEjDR,MAAAA,OAAO,EAAE,KAAKC;AAFmC,KAAvC,CAAL,CAGJC,IAHI,CAGC,KAAKC,cAHN,CAAP;AAID;;AAEDiB,EAAAA,oBAAoB,CAACF,EAAD,EAAKG,OAAL,EAAc;AAChC,QAAIA,OAAJ,EAAa;AACX,aAAO,KAAKF,UAAL,CAAgBD,EAAhB,CAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAKD,QAAL,CAAcC,EAAd,CAAP;AACD;AACF;;AAEDI,EAAAA,UAAU,CAACJ,EAAD,EAAK;AACb,WAAOnB,KAAK,CAAE,GAAE,KAAKF,QAAS,UAASqB,EAAG,EAA9B,EAAiC;AAC3CV,MAAAA,MAAM,EAAE,QADmC;AAE3CR,MAAAA,OAAO,EAAE,KAAKC;AAF6B,KAAjC,CAAL,CAGJC,IAHI,CAGC,KAAKC,cAHN,CAAP;AAID;;AAEDA,EAAAA,cAAc,CAACoB,GAAD,EAAM;AAClB,QAAIA,GAAG,CAACC,EAAR,EAAY;AACV,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;;AACD,WAAOC,OAAO,CAACC,MAAR,CAAgB,wBAAuBJ,GAAG,CAACK,MAAO,EAAlD,CAAP;AACD;;AAzFO;;AA4FV,MAAMC,GAAG,GAAG,IAAInC,GAAJ,CAAQ;AAClBE,EAAAA,OAAO,EAAE,6CADS;AAElBI,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AAFS,CAAR,CAAZ;AAOA,eAAe6B,GAAf","sourcesContent":["class Api {\n  constructor({ baseUrl }) {\n    this._baseUrl = baseUrl;\n  }\n\n  getProfile() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  getCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  editProfile(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  updateAvatar(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  addCard(name, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  getLikes() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  likeCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: 'PUT',\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  removeLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  changeLikeCardStatus(id, isLiked) {\n    if (isLiked) {\n      return this.removeLike(id);\n    } else {\n      return this.likeCard(id);\n    }\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Что-то пошло не так: ${res.status}`);\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-37',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}