{"ast":null,"code":"import _classCallCheck from\"C:/Users/User/OneDrive/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/react-mesto-auth-main/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/User/OneDrive/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/react-mesto-auth-main/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(_ref){var baseUrl=_ref.baseUrl,headers=_ref.headers;_classCallCheck(this,Api);this._baseUrl=baseUrl;this._headers=headers;}_createClass(Api,[{key:\"getProfile\",value:function getProfile(){return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{headers:this._headers}).then(this._checkResponse);}},{key:\"getCards\",value:function getCards(){return fetch(\"\".concat(this._baseUrl,\"/cards\"),{headers:this._headers}).then(this._checkResponse);}},{key:\"editProfile\",value:function editProfile(name,about){return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify({name:name,about:about})}).then(this._checkResponse);}},{key:\"updateAvatar\",value:function updateAvatar(avatar){return fetch(\"\".concat(this._baseUrl,\"/users/me/avatar\"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify({avatar:avatar})}).then(this._checkResponse);}},{key:\"addCard\",value:function addCard(name,link){return fetch(\"\".concat(this._baseUrl,\"/cards\"),{method:\"POST\",headers:this._headers,body:JSON.stringify({name:name,link:link})}).then(this._checkResponse);}},{key:\"getLikes\",value:function getLikes(){return fetch(\"\".concat(this._baseUrl,\"/cards\"),{headers:this._headers}).then(this._checkResponse);}},{key:\"likeCard\",value:function likeCard(id){return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(id,\"/likes\"),{method:\"PUT\",headers:this._headers}).then(this._checkResponse);}},{key:\"removeLike\",value:function removeLike(id){return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(id,\"/likes\"),{method:\"DELETE\",headers:this._headers}).then(this._checkResponse);}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(id,isLiked){if(isLiked){return this.removeLike(id);}else{return this.likeCard(id);}}},{key:\"deleteCard\",value:function deleteCard(id){return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(id),{method:\"DELETE\",headers:this._headers}).then(this._checkResponse);}},{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u0427\\u0442\\u043E-\\u0442\\u043E \\u043F\\u043E\\u0448\\u043B\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A: \".concat(res.status));}}]);return Api;}();var api=new Api({baseUrl:\"https://mesto.nomoreparties.co/v1/cohort-37\",headers:{authorization:\"5dd49ee8-1050-4485-8aeb-9854c9f75df1\",// authorization: '9e805e1a-4ae4-4e34-b6d0-ba7f164bd419',\n\"Content-Type\":\"application/json\"}});export default api;","map":{"version":3,"sources":["C:/Users/User/OneDrive/Рабочий стол/react-mesto-auth-main/src/utils/Api.js"],"names":["Api","baseUrl","headers","_baseUrl","_headers","fetch","then","_checkResponse","name","about","method","body","JSON","stringify","avatar","link","id","isLiked","removeLike","likeCard","res","ok","json","Promise","reject","status","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  getProfile() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  getCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  editProfile(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  updateAvatar(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  addCard(name, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  getLikes() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  likeCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: \"PUT\",\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  removeLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  changeLikeCardStatus(id, isLiked) {\n    if (isLiked) {\n      return this.removeLike(id)\n    } else {\n      return this.likeCard(id)\n    }\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Что-то пошло не так: ${res.status}`);\n  }\n}\n\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-37\",\n  headers: {\n    authorization: \"5dd49ee8-1050-4485-8aeb-9854c9f75df1\",\n    // authorization: '9e805e1a-4ae4-4e34-b6d0-ba7f164bd419',\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}